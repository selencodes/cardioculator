import pandas as pd
import numpy as np
import joblib
# Visualization Libraries ğŸ“Š

import seaborn as sns
import matplotlib.pyplot as plt
import missingno as msno

# Machine Learning Models ğŸ¤–

from sklearn.preprocessing import LabelEncoder, RobustScaler
from sklearn.linear_model import LogisticRegression, LinearRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from catboost import CatBoostClassifier
from lightgbm import LGBMClassifier
from xgboost import XGBClassifier
from sklearn.model_selection import GridSearchCV, cross_validate, train_test_split
from sklearn.metrics import accuracy_score, f1_score, roc_auc_score, recall_score, precision_score, confusion_matrix, classification_report, RocCurveDisplay

import joblib
import lightgbm

import streamlit as st

model = joblib.load(r'C:\Users\fatse\final_model.pkl')

st.title("KardiyovaskÃ¼ler HastalÄ±k Riskinizi HesaplayÄ±n")

# KullanÄ±cÄ±dan giriÅŸ al
yas = st.number_input("YaÅŸÄ±nÄ±zÄ± girin:", step = 1)
kolesterol = st.number_input("Kolesterol deÄŸerinizi girin:", step=1, value = 0)
sistolik = st.number_input("BÃ¼yÃ¼k (Sistolik) tansiyon deÄŸerinizi girin:", step =1, value = 0)
diastol = st.number_input("KÃ¼Ã§Ã¼k (Diyastolik) tansiyon deÄŸerinizi girin :", step =1, value = 0)
boy =st.number_input("Boyunuzu cm cinsinden giriniz :", min_value=1, step =1)
kilo = st.number_input("Kilonuzu kg cinsinden giriniz :", min_value=1, step =1)

bmi = kilo *10000 / (boy**2)
if sistolik < 120 and diastol < 80:
        kat =  0
elif sistolik < 130 and diastol < 85:
        kat = 1
elif (sistolik >= 130 and sistolik <= 139) or (diastol >= 85 and diastol <= 89):
        kat = 2
elif (sistolik >= 140 and sistolik <= 159) or (diastol >= 90 and diastol <= 99):
        kat = 3
elif (sistolik >= 160 and sistolik <= 179) or (diastol >= 100 and diastol <= 109):
        kat = 4
elif sistolik >= 180 or diastol >= 110:
        kat = 5
elif sistolik >= 140 and sistolik <= 160 and diastol < 90:
        kat = 6
elif sistolik > 160 and diastol < 90:
        kat = 7
else:
        kat = -1

if kolesterol <= 200:
    kol = 1
elif kolesterol == range(200,240):
    kol = 2
elif kolesterol >=240:
    kol = 3




data = {'blood_pressure_category': kat,
    'ap_hi': sistolik,
    'ap_lo':diastol,
    'age':yas,
    'cholesterol':kol,
    'bmi':bmi}


def show_recommendations():
    st.write("""
    Ã–neriler:
    * DÃœzenli olarak gÃ¼nde en az 30 dakika yÃ¼rÃ¼yÃ¼ÅŸ yapÄ±n.
    * YaÄŸlÄ± besinleri, kÄ±zartma yiyecekleri, fast food tarzÄ± yeme dÃ¼zenini  bÄ±rakÄ±n.  
    * DÃ¼zenli egzersiz yapÄ±n.
    * Sigara ve alkol gibi alÄ±ÅŸkanlÄ±klarÄ±nÄ±zÄ± bÄ±rakÄ±n.
    * Stresten uzak durmaya Ã§alÄ±ÅŸÄ±n.
    * Su tÃ¼ketiminize dikkat edin.
    """)

def good_health():
    st.write("""SaÄŸlÄ±ÄŸÄ±nÄ±za dikkat etmeye devam edin. 
    Kalp hastalÄ±klarÄ±ndan kaÃ§Ä±nmak iÃ§in doÄŸru yoldasÄ±nÄ±z gibi gÃ¶rÃ¼nÃ¼yor. """)




# Tahmin butonu
if st.button("Tahmin Et"):
    # Veriyi model iÃ§in uygun formata getir (bu Ã¶rnekte basit bir liste)
    user = pd.DataFrame([data])
    prediction = model.predict(user)
    if prediction[0]==1:
        st.write("KardiyovaskÃ¼ler hastalÄ±k geÃ§irme riskiniz yÃ¼ksek.")
        show_recommendations()
    else :
        st.write("KardiyovaskÃ¼ler hastalÄ±k geÃ§irme riskiniz dÃ¼ÅŸÃ¼k.")
